module.exports = {
  root: true,
  parserOptions: {
    extraFileExtensions: ['.vue'],
    parser: '@typescript-eslint/parser',
    tsconfigRootDir: __dirname,
    ecmaVersion: 2018,
    sourceType: 'module',
  },
  env: {
    browser: true,
  },
  extends: [
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:vue/vue3-recommended',
  ],
  plugins: ['@typescript-eslint', 'vue'],
  globals: {
    ga: 'readonly',
    cordova: 'readonly',
    process: 'readonly',
    Capacitor: 'readonly',
    chrome: 'readonly',
  },
  rules: {
    'prefer-promise-reject-errors': 'off',
    quotes: [1, 'single'],

    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/restrict-plus-operands': 'off',
    '@typescript-eslint/no-unsafe-member-access': 'off',
    '@typescript-eslint/no-unsafe-assignment': 'off',
    '@typescript-eslint/no-unsafe-return': 'off',
    '@typescript-eslint/no-unsafe-call': 'off',
    '@typescript-eslint/ban-types': 'off',
    '@typescript-eslint/no-unused-vars': 2,
    '@typescript-eslint/no-floating-promises': 'off',
    '@typescript-eslint/no-use-before-define': ['error', { functions: false }],
    '@typescript-eslint/no-explicit-any': 0,
    '@typescript-eslint/no-misused-promises': 0,
    '@typescript-eslint/no-unsafe-argument': 0,
    '@typescript-eslint/restrict-template-expressions': 0,
    'func-style': ['error', 'declaration'],
    'vue/multiline-html-element-content-newline': 0,
    'vue/html-closing-bracket-newline': 0,
    'vue/html-indent': 0,
    'vue/no-v-text-v-html-on-component': 0,
    'vue/attribute-hyphenation': 0,
    'vue/max-attributes-per-line': 0,
    'vue/require-prop-types': 0,
    'vue/first-attribute-linebreak': 0,
    'vue/v-on-event-hyphenation': 0,
    'vue/component-tags-order': 0,
    'vue/multi-word-component-names': 0,
    'vue/vue/require-default-prop': 0,

    semi: ['error', 'never'],
    'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off',
  },
}
